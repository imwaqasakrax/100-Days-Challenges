def is_leap(year):
  if year % 4 == 0:
    if year % 100 == 0:
      if year % 400 == 0:
        return True
      else:
        return False
    else:
      return True
  else:
    return False

def days_in_month(year_,month_):
  month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] 
  if is_leap(year) and month == 2:
        return 29 
  return month_days[month-1]
year = int(input("Enter a year: "))
month = int(input("Enter a month: "))
days = days_in_month(year, month)
print(days)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Calculator Project start
#add 
def add(n1,n2):
  return n1 + n2
#Subract
def subtract(n1,n2):
  return n1 - n2
#Multiply
def multiply(n1,n2):
  return n1 * n2
#division 
def divide(n1,n2):
  return n1 / n2
#creating a dicionary Operaions having Values
operations = {
  "+": add,
  "-": subtract,
  "*": multiply,
  "/": divide
}
num1 = input("Enter the first number: ")
num2 = input("Enter the second number: ")
for operator in operations:
  print(operator)
choice = input("Enter the operator you want to perform: ")
function = operations[choice]
result = function(int(num1),int(num2))
print(f"{num1} {choice} {num2} = {result}")
---------------------------------------------------------------------------------------------------------------------------------------------------------
def add(n1, n2):
  return n1 + n2

def subtract(n1, n2):
  return n1 - n2

def multiply(n1, n2):
  return n1 * n2

def divide(n1, n2):
  return n1 / n2

operations = {
  "+": add,
  "-": subtract,
  "*": multiply,
  "/": divide
}

def calculator():
  num1 = float(input("+"))
  for symbol in operations:
    print(symbol)
  should_continue = True
 
  while should_continue:
    operation_symbol = input("Pick an operation: ")
    num2 = float(input("What's the next number?: "))
    calculation_function = operations[operation_symbol]
    answer = calculation_function(num1, num2)
    print(f"{num1} {operation_symbol} {num2} = {answer}")

    if input(f"Type 'y' to continue calculating with {answer}, or type 'n' to start a new calculation: ") == 'y':
      num1 = answer
    else:
      should_continue = False
      calculator()

calculator()
--------------------------------------------------------------------------------------------------------------------------
class Solution:
    def sumOfCubes(self, num):
        # Convert the number to a string to iterate through its digits
        digits = [int(digit) for digit in str(num)]
        # Calculate the cube of each digit and sum them
        result = sum(digit ** 3 for digit in digits)
        return result

# Example Usage:
solution = Solution()
num = 25
result = solution.sumOfCubes(num)
print(f"The sum of cubes of digits of {num} is: {result}")








